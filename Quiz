##Answer 1:


def moveZeros(nums):
    n = len(nums)
    left = 0  # Pointer to track the last non-zero element

    # Iterate through the array
    for i in range(n):
        if nums[i] != 0:
            # If the current element is non-zero, swap it with the last non-zero element
            nums[i], nums[left] = nums[left], nums[i]
            left += 1

    return nums



##Ans2:

def firstUniqChar(s):
    char_count = {}  # Hash map to store character counts

    # Count the occurrences of each character in the string
    for char in s:
        char_count[char] = char_count.get(char, 0) + 1

    # Iterate through the string to find the first non-repeating character
    for i in range(len(s)):
        if char_count[s[i]] == 1:
            return i

    return -1  # No non-repeating character found
